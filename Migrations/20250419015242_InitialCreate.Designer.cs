// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using entity.Context;

#nullable disable

namespace entity.Migrations
{
    [DbContext(typeof(TermoContext))]
    [Migration("20250419015242_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("entity.Model.CadTermoItem", b =>
                {
                    b.Property<int>("codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("codigo"));

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("obrigatorio")
                        .HasColumnType("bit");

                    b.Property<int>("termo_codigo")
                        .HasColumnType("int");

                    b.HasKey("codigo");

                    b.HasIndex("termo_codigo");

                    b.ToTable("tb_cad_termo_item");
                });

            modelBuilder.Entity("entity.Model.CadTermoItemAceite", b =>
                {
                    b.Property<int>("codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("codigo"));

                    b.Property<int?>("CadTermoItemcodigo")
                        .HasColumnType("int");

                    b.Property<bool>("aceite")
                        .HasColumnType("bit");

                    b.Property<int>("termo_aceite_codigo")
                        .HasColumnType("int");

                    b.Property<int>("termo_item_codigo")
                        .HasColumnType("int");

                    b.HasKey("codigo");

                    b.HasIndex("CadTermoItemcodigo");

                    b.HasIndex("termo_aceite_codigo");

                    b.ToTable("tb_cad_termo_item_aceite");
                });

            modelBuilder.Entity("entity.Model.CadTermoItemAceiteUsuarioHistorico", b =>
                {
                    b.Property<int>("usuario_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("usuario_codigo"));

                    b.Property<int>("codigo")
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<DateTime>("data_aceite")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("data_alteracao")
                        .HasColumnType("datetime2");

                    b.Property<int>("termo_codigo")
                        .HasColumnType("int");

                    b.HasKey("usuario_codigo");

                    b.HasIndex("termo_codigo");

                    b.ToTable("tb_cad_termo_item_aceite_usuario_historico");
                });

            modelBuilder.Entity("entity.Model.Termo", b =>
                {
                    b.Property<int>("codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("codigo"));

                    b.Property<DateTime>("dataCriacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_criacao");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("termocodigo")
                        .HasColumnType("int");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("usuario_codigo")
                        .HasColumnType("int")
                        .HasColumnName("usuario_codigo");

                    b.Property<string>("versao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("codigo");

                    b.HasIndex("termocodigo");

                    b.HasIndex("usuario_codigo");

                    b.ToTable("tb_cad_termo");
                });

            modelBuilder.Entity("entity.Model.Usuario", b =>
                {
                    b.Property<int>("codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("codigo"));

                    b.Property<int?>("Usuariocodigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("dataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("codigo");

                    b.HasIndex("Usuariocodigo");

                    b.ToTable("tb_cad_usuario");
                });

            modelBuilder.Entity("entity.Model.CadTermoItem", b =>
                {
                    b.HasOne("entity.Model.Termo", "Termo")
                        .WithMany()
                        .HasForeignKey("termo_codigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Termo");
                });

            modelBuilder.Entity("entity.Model.CadTermoItemAceite", b =>
                {
                    b.HasOne("entity.Model.CadTermoItem", null)
                        .WithMany("Aceites")
                        .HasForeignKey("CadTermoItemcodigo");

                    b.HasOne("entity.Model.CadTermoItemAceiteUsuarioHistorico", "TermoHistorico")
                        .WithMany("Aceites")
                        .HasForeignKey("termo_aceite_codigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TermoHistorico");
                });

            modelBuilder.Entity("entity.Model.CadTermoItemAceiteUsuarioHistorico", b =>
                {
                    b.HasOne("entity.Model.Termo", "Termo")
                        .WithMany("Historicos")
                        .HasForeignKey("termo_codigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Termo");
                });

            modelBuilder.Entity("entity.Model.Termo", b =>
                {
                    b.HasOne("entity.Model.Termo", "termo")
                        .WithMany()
                        .HasForeignKey("termocodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("entity.Model.Usuario", "usuario")
                        .WithMany()
                        .HasForeignKey("usuario_codigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("termo");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("entity.Model.Usuario", b =>
                {
                    b.HasOne("entity.Model.Usuario", null)
                        .WithMany("usuarios")
                        .HasForeignKey("Usuariocodigo");
                });

            modelBuilder.Entity("entity.Model.CadTermoItem", b =>
                {
                    b.Navigation("Aceites");
                });

            modelBuilder.Entity("entity.Model.CadTermoItemAceiteUsuarioHistorico", b =>
                {
                    b.Navigation("Aceites");
                });

            modelBuilder.Entity("entity.Model.Termo", b =>
                {
                    b.Navigation("Historicos");
                });

            modelBuilder.Entity("entity.Model.Usuario", b =>
                {
                    b.Navigation("usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
